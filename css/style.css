/* CSS for Beginners Final Project - Dave Gray */
/* 1/26-28/23 */
@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans&family=Sriracha&display=swap');

:root {
    /* || FONTS */
    --FF-HEADING: 'Sriracha', cursive;
    --FF-BODY: 'Nunito Sans', sans-serif;

    /* || COLORS */
    --BG-HTML: #F9F1E4 url('../img/waffle_pattern_400x125.png') repeat;
    --BG-BODY: #fff;
    --BG-INPUT: #F7F2EE;
    --BORDER-COLOR: #9e9893;
    --LINK-COLOR: #C48F5D;
    --LINK-HOVER: #E5A76D;
    --LINK-ACTIVE: #9e9893;
    --TEXT-WHITE: #fff;
    --TEXT-COLOR: #5E544B;

    /* || EFFECTS */
    --BORDER: 2px solid var(--BORDER-COLOR);
}


/* || RESET */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img {
    display: block;
    height: auto;
    max-width: 100%;
}

fieldset, label, input, textarea, button {
    border: none;
    font: inherit;
}


/* || UTILITY CLASSES */
.offscreen {
    position: absolute;
    left: -10000px;
}

.nowrap {
    white-space: nowrap;
}


/* || GENERAL STYLES */
html {
    background: var(--BG-HTML);
    scroll-behavior: smooth;
}

body {
    background-color: var(--BG-BODY);
    box-shadow: 0px 4px 48px rgba(158, 152, 147, 0.1);
    color: var(--TEXT-COLOR);
    font-family: var(--FF-BODY);
    margin: 0 auto;
    max-width: 800px;
    min-height: 100vh;
    padding: 1.5rem;
    display: flex;
    flex-flow: column nowrap;
}

a {
    color: var(--LINK-COLOR);
}

a:where(:hover, :focus-visible) {
    color: var(--LINK-HOVER);
    transition: all 0.3s ease;
}

a:active {
    color: var(--LINK-ACTIVE);
}

button {
    padding: 0.5rem 1.5rem;
    font-weight: bold;
    border-radius: 4px;
}

h1, h2, h3 {
    font-family: var(--FF-HEADING);
    text-align: center;
}

h1, h2 {
    margin-bottom: 1rem;
}

h3 {
    margin-bottom: 0.5rem;
}

p {
    line-height: 1.5;
}

nav li {
    list-style-type: none;
}


/* || HEADER */
.header__h1::before {
    content: "ðŸ§‡ ";
}

.header__h1::after {
    content: " ðŸ§‡";
}

.nav {
    background-color: var(--BG-BODY);
    border-bottom: var(--BORDER);
    border-top: var(--BORDER);
    position: sticky;
    top: -1px;
    z-index: 1;
}

.nav__ul {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    align-items: center;
}

.nav a {
    color: var(--TEXT-COLOR);
    display: block;
    font-weight: bold;
    padding: 0.5rem 0.8rem;
    text-decoration: none;
}

.nav a:active {
    color: var(--LINK-ACTIVE);
}

.nav a:where(:hover, :focus-visible) {
    color: var(--LINK-HOVER);
}

.nav a.selected {
    color: var(--LINK-COLOR);
}


/* || HERO */
.hero {
    position: relative;
    margin-top: 1.25rem;
}

.hero__h2 {
    background-color: rgba(196, 143, 93, 0.8);
    border-radius: 1rem 3px 1rem 3px;
    color: var(--TEXT-WHITE);
    padding: 0.5rem 1rem;
    position: absolute;
    top: 0;
    left: 1rem;
    animation: showWelcome 0.5s ease-in-out forwards;
    transform-origin: top center;
}

@keyframes showWelcome {
    0% {
        top: 0;
        transform: scaleY(0);
    }

    80% {
        top: 1rem;
        transform: scaleY(1.2);
    }

    100% {
        top: 1rem;
        transform: scaleY(1);
    }
}


/* || MAIN */
.main {
    flex: 1;
}

.main__article {
    scroll-margin-top: 4rem;
    padding: 2rem 0 3rem 0;
}

.main__article :where(p, dd) {
    margin-bottom: 0.5rem;
}

.main__article p:last-child {
    margin-bottom: 0;
}

.main__btt {
    font-weight: bold;
    margin-bottom: 1.5rem;
    text-align: center;
}


/* || FOOTER */
.footer {
    border-bottom: var(--BORDER);
    border-top: 5px double var(--BORDER-COLOR);
    padding: 1rem 0;
    text-align: center;
}


/* || MENU */
/* Turn table to grid - flatten while keeping semantic markup (make menu items act like divs in a parent container set to display: grid */
/* Setting an element to 'display: contents' causes the element's children to appear as if they were *direct children* of the element's parent, ignoring the element itself. */
    /* So setting 'display: contents' on thead, tbody, tfoot, and tr makes .menu__container (set to display: grid) ignore them and use .menu__items (th, td) as grid items  */

thead, tbody, tfoot, tr {
    display: contents;
}

.menu__container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* just have to specify grid area for items that take up more than one row / column which are cr (Crunchy), sf (Soft) and sb (Syrup and ButteR) */
    grid-template-areas:
        "hd1 hd2 hd3"
        "cr cr1 cr1p"
        "cr cr2 cr2p"
        "cr cr3 cr3p"
        "sf sf1 sf1p"
        "sf sf2 sf2p"
        "sf sf3 sf3p"
        "sb sb sb";
}

.menu__heading {
    background-color: var(--TEXT-COLOR);
    color: var(--TEXT-WHITE);
    padding: 0.5rem;
}

.menu__item {
    display: grid;
    place-content: center;
    border-bottom: var(--BORDER);
    padding: 1rem;
}

/* menu item in every third row, since display: contents ignoring tr */
.menu__tr:nth-child(3n) > .menu__item {
    border-bottom: 3px solid var(--BORDER-COLOR);
}

.menu__cr,
.menu__sf {
    border-right: var(--BORDER);
    border-bottom: 3px solid var(--BORDER-COLOR);
    font: bold 1.25rem var(--FF-HEADING);
}

.menu__cr {
    grid-area: cr;
}

.menu__sf {
    grid-area: sf;
}

.menu__sb {
    grid-area: sb;
    font-weight: bold;
    border-bottom: 3px solid var(--BORDER-COLOR);
}


/* || ABOUT */
.about {
    display: flex;
    flex-flow: row wrap;
    column-gap: 1.5rem;
}

.about__h2{
    width: 100%;
}

.about__image,
.about__container {
    flex: 1;
}

.about__details {
    border-bottom: var(--BORDER);
    border-top: var(--BORDER);
    padding: 0.5rem;
}

.about__trivia-question {
    font-weight: bold;
}

.about__trivia-answer {
    padding: 0.5rem 0 0.5rem 1rem;
}


/* || HOURS */
.hours {
    text-align: center;
}

.hours__dt {
    font-weight: bold;
}


/* || CONTACT */
.contact {
    display: flex;
    flex-flow: row wrap;
    column-gap: 3rem;
}

.contact__h2 {
    width: 100%;
}

.contact__form,
.contact__location {
    flex: 1;
}

.contact__label {
    display: block;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.contact__input,
.contact__textarea {
    background: var(--BG-INPUT);
    border-radius: 4px;
    color: inherit;
    display: block;
    margin-bottom: 1rem;
    padding: 0.8rem;
    resize: none;
    width: 100%;
}

:where(.contact__input, .contact__textarea):focus-visible {
    outline: var(--BORDER);
}

.contact__btn--primary {
    background-color: var(--LINK-COLOR);
    color: var(--TEXT-WHITE);
    margin-right: 0.8rem;
}

.contact__btn--primary:where(:hover, :focus-visible) {
    background-color: var(--LINK-HOVER);
}

.contact__btn--primary:active {
    background-color: var(--LINK-ACTIVE);
}

.contact__btn--secondary {
    background-color: var(--TEXT-WHITE);
    color: var(--LINK-COLOR);
    outline: 2px solid var(--LINK-COLOR);
}

.contact__btn--secondary:where(:hover, :focus-visible) {
    color: var(--LINK-HOVER);
    outline: 2px solid var(--LINK-HOVER);
}

.contact__btn--secondary:active {
    color: var(--LINK-ACTIVE);
    outline: 2px solid var(--LINK-ACTIVE);
}

.contact__h3 {
    font: bold 1rem var(--FF-BODY);
    margin-bottom: 1rem;
    text-align: left;
}


/* || MOBILE */
@media screen and (max-width: 768px) {
    .about,
    .contact {
        flex-flow: column nowrap;
        align-items: stretch;
    }


    /* || ABOUT */
    .about__trivia {
        margin: 1.5rem 0;
    }

    .about__image {
        width: 100%;
        order: 1;
    }


    /* || CONTACT */
    .contact__h2 {
        order: -2;
    }

    .contact__location {
        margin-bottom: 1.5rem;
        order: -1;
    }
}

@media screen and (max-width: 425px) {
    .header__h1::after {
        content: "";
    }

    #nav__li--menu {
        display: none;
    }
}
